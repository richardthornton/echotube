# EchoTube Environment Variables Configuration
# Copy this file to .env and customize with your settings

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Discord webhook URL (REQUIRED)
# How to create: https://support.discord.com/hc/en-us/articles/228383668
ET_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR_WEBHOOK_URL_HERE

# Content sources - At least one is required
# YouTube Channel IDs (format: UCxxxxxxxxxxxxxxxxxxxx)
ET_CHANNEL_IDS=UCexample1,UCexample2,UCexample3

# Optional: YouTube Playlist IDs (format: PLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
# ET_PLAYLIST_IDS=PLexample1,PLexample2

# Keywords to match in video titles
ET_KEYWORDS=minecraft,gaming,tutorial,update

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Keyword matching logic
# "any" = match if ANY keyword is found (default)
# "all" = match only if ALL keywords are found
ET_MATCH_TYPE=any

# Polling frequency in seconds (default: 300 = 5 minutes)
# Minimum recommended: 60 seconds
ET_POLL_INTERVAL_SECONDS=300

# Logging level for application output
# Options: DEBUG, INFO, WARN, ERROR (default: INFO)
ET_LOG_LEVEL=INFO

# Cache file location for persistent video tracking
# Leave empty for memory-only caching
ET_CACHE_FILE=/app/cache/videos.json

# =============================================================================
# TESTING AND DEVELOPMENT
# =============================================================================

# Test mode - fetches videos but doesn't post to Discord
# Set to "true" for safe configuration testing
# ET_TEST_MODE=true

# Development mode - posts only one video per channel/playlist
# Useful for testing without flooding Discord
# ET_DEVELOPMENT_MODE=true

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Minecraft content monitoring
# ET_CHANNEL_IDS=UC2j-ZVecvIHd9W2YU_0KKBA,UCsQ9VkAN1sP8uF74iMbVYPQ
# ET_KEYWORDS=minecraft,snapshot,update,cave
# ET_MATCH_TYPE=any

# Example 2: Programming tutorials
# ET_CHANNEL_IDS=UCWv7vMbMWH4-V0ZXdmDpPBA,UC8butISFwT-Wl7EV0hUK0BQ  
# ET_KEYWORDS=javascript,tutorial,coding,programming
# ET_MATCH_TYPE=any

# Example 3: Gaming highlights with strict matching
# ET_CHANNEL_IDS=UCexample1
# ET_KEYWORDS=highlight,epic,win
# ET_MATCH_TYPE=all

# =============================================================================
# DOCKER DEPLOYMENT NOTES
# =============================================================================

# When using Docker:
# - Place this file in the same directory as docker-compose.yml
# - Rename to .env
# - Docker Compose will automatically load these variables
# - Ensure proper volume mounting for cache persistence:
#   volumes:
#     - ./cache:/app/cache

# When using docker run:
# docker run -d --env-file .env richardthornton/echotube:latest